basePath: /api/v1
definitions:
  github_com_turahe_master-data-rest-api_pkg_response.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  internal_adapters_primary_http.CreateAPIKeyRequest:
    properties:
      description:
        type: string
      expires_at:
        description: ISO 8601 format
        type: string
      name:
        type: string
    required:
    - name
    type: object
  internal_adapters_primary_http.CreateBankRequest:
    properties:
      alias:
        type: string
      code:
        type: string
      company:
        type: string
      name:
        type: string
    required:
    - alias
    - code
    - company
    - name
    type: object
  internal_adapters_primary_http.CreateGeodirectoryRequest:
    properties:
      code:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      name:
        type: string
      parent_id:
        type: string
      postal_code:
        type: string
      type:
        type: string
    required:
    - name
    - type
    type: object
  internal_adapters_primary_http.MoveGeodirectoryRequest:
    properties:
      new_parent_id:
        type: string
    required:
    - new_parent_id
    type: object
  internal_adapters_primary_http.UpdateAPIKeyRequest:
    properties:
      description:
        type: string
      expires_at:
        description: ISO 8601 format
        type: string
      name:
        type: string
    type: object
  internal_adapters_primary_http.UpdateBankRequest:
    properties:
      alias:
        type: string
      code:
        type: string
      company:
        type: string
      name:
        type: string
    type: object
  internal_adapters_primary_http.UpdateGeodirectoryRequest:
    properties:
      code:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      name:
        type: string
      postal_code:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A REST API for managing master data including countries, provinces,
    cities, districts, villages, banks, currencies, and languages.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Master Data REST API
  version: "1.0"
paths:
  /api/v1/api-keys:
    get:
      description: Get all API keys with pagination
      parameters:
      - default: 50
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: API keys retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all API keys
      tags:
      - api-keys
    post:
      consumes:
      - application/json
      description: Create a new API key with the provided information
      parameters:
      - description: API key information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_adapters_primary_http.CreateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: API key created successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create a new API key
      tags:
      - api-keys
  /api/v1/api-keys/{id}:
    delete:
      description: Soft delete an API key
      parameters:
      - description: API Key ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: API key deleted successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: API key not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete an API key
      tags:
      - api-keys
    get:
      description: Get an API key by its UUID
      parameters:
      - description: API Key ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: API key retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: API key not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get API key by ID
      tags:
      - api-keys
    put:
      consumes:
      - application/json
      description: Update an existing API key
      parameters:
      - description: API Key ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Updated API key information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_adapters_primary_http.UpdateAPIKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: API key updated successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: API key not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update an API key
      tags:
      - api-keys
  /api/v1/api-keys/{id}/activate:
    post:
      description: Activate a deactivated API key
      parameters:
      - description: API Key ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: API key activated successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: API key not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Activate an API key
      tags:
      - api-keys
  /api/v1/api-keys/{id}/deactivate:
    post:
      description: Deactivate an active API key
      parameters:
      - description: API Key ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: API key deactivated successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: API key not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Deactivate an API key
      tags:
      - api-keys
  /api/v1/banks:
    get:
      description: Get all banks with pagination
      parameters:
      - default: 50
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Banks retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all banks
      tags:
      - banks
    post:
      consumes:
      - application/json
      description: Create a new bank with the provided information
      parameters:
      - description: Bank information
        in: body
        name: bank
        required: true
        schema:
          $ref: '#/definitions/internal_adapters_primary_http.CreateBankRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Bank created successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create a new bank
      tags:
      - banks
  /api/v1/banks/{id}:
    delete:
      description: Delete a bank by ID
      parameters:
      - description: Bank ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Bank deleted successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Bank not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete a bank
      tags:
      - banks
    get:
      description: Get a bank by its UUID
      parameters:
      - description: Bank ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Bank retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Bank not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get bank by ID
      tags:
      - banks
    put:
      consumes:
      - application/json
      description: Update an existing bank
      parameters:
      - description: Bank ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Updated bank information
        in: body
        name: bank
        required: true
        schema:
          $ref: '#/definitions/internal_adapters_primary_http.UpdateBankRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Bank updated successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Bank not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update a bank
      tags:
      - banks
  /api/v1/banks/code/{code}:
    get:
      description: Get a bank by its code
      parameters:
      - description: Bank Code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Bank retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Bank not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get bank by code
      tags:
      - banks
  /api/v1/banks/search:
    get:
      description: Search banks by name, alias, company, or code
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - default: 50
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Banks found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Search banks
      tags:
      - banks
  /api/v1/geodirectories:
    get:
      description: Get all geodirectories with pagination
      parameters:
      - default: 50
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Geodirectories retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get all geodirectories
      tags:
      - geodirectories
    post:
      consumes:
      - application/json
      description: Create a new geodirectory with hierarchical support
      parameters:
      - description: Geodirectory data
        in: body
        name: geodirectory
        required: true
        schema:
          $ref: '#/definitions/internal_adapters_primary_http.CreateGeodirectoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Geodirectory created successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create a new geodirectory
      tags:
      - geodirectories
  /api/v1/geodirectories/{id}:
    delete:
      description: Delete a geodirectory and all its descendants
      parameters:
      - description: Geodirectory ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Geodirectory deleted successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Geodirectory not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete a geodirectory
      tags:
      - geodirectories
    get:
      description: Get a geodirectory by its UUID
      parameters:
      - description: Geodirectory ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Geodirectory retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Geodirectory not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get geodirectory by ID
      tags:
      - geodirectories
    put:
      consumes:
      - application/json
      description: Update an existing geodirectory
      parameters:
      - description: Geodirectory ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Updated geodirectory data
        in: body
        name: geodirectory
        required: true
        schema:
          $ref: '#/definitions/internal_adapters_primary_http.UpdateGeodirectoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Geodirectory updated successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Geodirectory not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Update a geodirectory
      tags:
      - geodirectories
  /api/v1/geodirectories/{id}/ancestors:
    get:
      description: Get all ancestors of a geodirectory using nested set model
      parameters:
      - description: Geodirectory ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ancestors retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Geodirectory not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get ancestors of a geodirectory
      tags:
      - geodirectories
  /api/v1/geodirectories/{id}/children:
    get:
      description: Get direct children of a geodirectory
      parameters:
      - description: Parent Geodirectory ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Filter by child type
        in: query
        name: type
        type: string
      - default: 50
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Children retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Geodirectory not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get children of a geodirectory
      tags:
      - geodirectories
  /api/v1/geodirectories/{id}/descendants:
    get:
      description: Get all descendants of a geodirectory using nested set model
      parameters:
      - description: Geodirectory ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - default: 100
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Descendants retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Geodirectory not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get descendants of a geodirectory
      tags:
      - geodirectories
  /api/v1/geodirectories/{id}/hierarchy:
    get:
      description: Get a geodirectory with its parent and children
      parameters:
      - description: Geodirectory ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Geodirectory with hierarchy retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Geodirectory not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get geodirectory with hierarchy
      tags:
      - geodirectories
  /api/v1/geodirectories/{id}/move:
    post:
      consumes:
      - application/json
      description: Move a geodirectory and its descendants to a new parent
      parameters:
      - description: Geodirectory ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Move request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_adapters_primary_http.MoveGeodirectoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Geodirectory moved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "404":
          description: Geodirectory not found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Move a geodirectory to a new parent
      tags:
      - geodirectories
  /api/v1/geodirectories/rebuild:
    post:
      description: Rebuild the nested set structure for all geodirectories
      produces:
      - application/json
      responses:
        "200":
          description: Nested set rebuilt successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Rebuild nested set structure
      tags:
      - geodirectories
  /api/v1/geodirectories/search:
    get:
      description: Search geodirectories by name, code, or postal code
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - default: 50
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Geodirectories found
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Search geodirectories
      tags:
      - geodirectories
  /api/v1/geodirectories/type/{type}:
    get:
      description: Get geodirectories filtered by type
      parameters:
      - description: Geodirectory Type
        enum:
        - CONTINENT
        - SUBCONTINENT
        - COUNTRY
        - STATE
        - PROVINCE
        - REGENCY
        - CITY
        - DISTRICT
        - SUBDISTRICT
        - VILLAGE
        in: path
        name: type
        required: true
        type: string
      - default: 50
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Geodirectories retrieved successfully
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_turahe_master-data-rest-api_pkg_response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get geodirectories by type
      tags:
      - geodirectories
securityDefinitions:
  ApiKeyAuth:
    description: Type "Bearer" followed by a space and API key.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
