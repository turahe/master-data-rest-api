basePath: /api/v1
definitions:
  entities.Bank:
    properties:
      alias:
        type: string
      code:
        type: string
      company:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  entities.City:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      name:
        type: string
      province_id:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  entities.Country:
    properties:
      calling_code:
        type: string
      capital:
        type: string
      citizenship:
        type: string
      country_code:
        type: string
      created_at:
        type: string
      currency_code:
        type: string
      currency_name:
        type: string
      currency_sub_unit:
        type: string
      currency_symbol:
        type: string
      eea:
        type: boolean
      flag:
        type: string
      full_name:
        type: string
      id:
        type: string
      iso_3166_2:
        type: string
      iso_3166_3:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      name:
        type: string
      region_code:
        type: string
      sub_region_code:
        type: string
      updated_at:
        type: string
    type: object
  entities.Province:
    properties:
      code:
        type: string
      country_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      iso_3166_2:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      name:
        type: string
      region:
        type: string
      updated_at:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A REST API for managing master data including countries, provinces,
    cities, districts, villages, banks, currencies, and languages.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Master Data REST API
  version: "1.0"
paths:
  /api/v1/banks:
    get:
      consumes:
      - application/json
      description: Get all banks with optional pagination
      produces:
      - application/json
      responses:
        "200":
          description: Banks retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.Bank'
                  type: array
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all banks
      tags:
      - banks
    post:
      consumes:
      - application/json
      description: Create a new bank with the provided information
      parameters:
      - description: Bank information
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Bank created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Bank'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new bank
      tags:
      - banks
  /api/v1/banks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a bank by its UUID
      parameters:
      - description: Bank ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Bank deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Bank not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a bank
      tags:
      - banks
    get:
      consumes:
      - application/json
      description: Get a bank by its UUID
      parameters:
      - description: Bank ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Bank found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Bank'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Bank not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get bank by ID
      tags:
      - banks
    put:
      consumes:
      - application/json
      description: Update a bank with the provided information
      parameters:
      - description: Bank ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Bank information
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Bank updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Bank'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Bank not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update a bank
      tags:
      - banks
  /api/v1/banks/alias/{alias}:
    get:
      consumes:
      - application/json
      description: Get banks by alias (can return multiple)
      parameters:
      - description: Bank alias
        in: path
        name: alias
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Banks found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.Bank'
                  type: array
              type: object
        "404":
          description: Banks not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get banks by alias
      tags:
      - banks
  /api/v1/banks/code/{code}:
    get:
      consumes:
      - application/json
      description: Get a bank by its code
      parameters:
      - description: Bank code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Bank found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Bank'
              type: object
        "404":
          description: Bank not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get bank by code
      tags:
      - banks
  /api/v1/banks/company/{company}:
    get:
      consumes:
      - application/json
      description: Get all banks for a specific company
      parameters:
      - description: Company name
        in: path
        name: company
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Banks found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.Bank'
                  type: array
              type: object
        "404":
          description: Banks not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get banks by company
      tags:
      - banks
  /api/v1/banks/count:
    get:
      consumes:
      - application/json
      description: Get the total number of banks
      produces:
      - application/json
      responses:
        "200":
          description: Bank count retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get bank count
      tags:
      - banks
  /api/v1/banks/name/{name}:
    get:
      consumes:
      - application/json
      description: Get banks by name (can return multiple)
      parameters:
      - description: Bank name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Banks found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.Bank'
                  type: array
              type: object
        "404":
          description: Banks not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get banks by name
      tags:
      - banks
  /api/v1/cities:
    get:
      consumes:
      - application/json
      description: Get all cities with optional pagination
      produces:
      - application/json
      responses:
        "200":
          description: Cities retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.City'
                  type: array
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all cities
      tags:
      - cities
    post:
      consumes:
      - application/json
      description: Create a new city with the provided information
      parameters:
      - description: City information
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: City created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.City'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new city
      tags:
      - cities
  /api/v1/cities/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a city by its UUID
      parameters:
      - description: City ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: City deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a city
      tags:
      - cities
    get:
      consumes:
      - application/json
      description: Get a city by its UUID
      parameters:
      - description: City ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: City found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.City'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get city by ID
      tags:
      - cities
    put:
      consumes:
      - application/json
      description: Update a city with the provided information
      parameters:
      - description: City ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: City information
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: City updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.City'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update a city
      tags:
      - cities
  /api/v1/cities/code/{code}:
    get:
      consumes:
      - application/json
      description: Get a city by its code
      parameters:
      - description: City code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: City found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.City'
              type: object
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get city by code
      tags:
      - cities
  /api/v1/cities/count:
    get:
      consumes:
      - application/json
      description: Get the total number of cities
      produces:
      - application/json
      responses:
        "200":
          description: City count retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get city count
      tags:
      - cities
  /api/v1/cities/name/{name}:
    get:
      consumes:
      - application/json
      description: Get a city by name
      parameters:
      - description: City name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: City found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.City'
              type: object
        "404":
          description: City not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get city by name
      tags:
      - cities
  /api/v1/cities/province/{province_id}:
    get:
      consumes:
      - application/json
      description: Get all cities for a specific province
      parameters:
      - description: Province ID
        format: uuid
        in: path
        name: province_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cities found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.City'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Cities not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get cities by province
      tags:
      - cities
  /api/v1/countries:
    post:
      consumes:
      - application/json
      description: Create a new country with the provided information
      parameters:
      - description: Country information
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Country created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Country'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new country
      tags:
      - countries
  /api/v1/countries/{id}:
    get:
      consumes:
      - application/json
      description: Get a country by its UUID
      parameters:
      - description: Country ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Country found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Country'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get country by ID
      tags:
      - countries
  /api/v1/provinces:
    get:
      consumes:
      - application/json
      description: Get all provinces with optional pagination
      produces:
      - application/json
      responses:
        "200":
          description: Provinces retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.Province'
                  type: array
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all provinces
      tags:
      - provinces
    post:
      consumes:
      - application/json
      description: Create a new province with the provided information
      parameters:
      - description: Province information
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Province created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Province'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new province
      tags:
      - provinces
  /api/v1/provinces/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a province by its UUID
      parameters:
      - description: Province ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Province deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a province
      tags:
      - provinces
    get:
      consumes:
      - application/json
      description: Get a province by its UUID
      parameters:
      - description: Province ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Province found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Province'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get province by ID
      tags:
      - provinces
    put:
      consumes:
      - application/json
      description: Update a province with the provided information
      parameters:
      - description: Province ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Province information
        in: body
        name: request
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Province updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Province'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update a province
      tags:
      - provinces
  /api/v1/provinces/code/{code}:
    get:
      consumes:
      - application/json
      description: Get a province by its code
      parameters:
      - description: Province code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Province found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Province'
              type: object
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get province by code
      tags:
      - provinces
  /api/v1/provinces/count:
    get:
      consumes:
      - application/json
      description: Get the total number of provinces
      produces:
      - application/json
      responses:
        "200":
          description: Province count retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get province count
      tags:
      - provinces
  /api/v1/provinces/country/{country_id}:
    get:
      consumes:
      - application/json
      description: Get all provinces for a specific country
      parameters:
      - description: Country ID
        format: uuid
        in: path
        name: country_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Provinces found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.Province'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Provinces not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get provinces by country
      tags:
      - provinces
  /api/v1/provinces/name/{name}:
    get:
      consumes:
      - application/json
      description: Get a province by name
      parameters:
      - description: Province name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Province found
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entities.Province'
              type: object
        "404":
          description: Province not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get province by name
      tags:
      - provinces
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
